
#ifndef __HELPERS
  #define __HELPERS

  /* RESERVE(Start, End)
   * 
   * This helper greedily reserves a block of space for
   * some inline hack. It prevents other things from overwriting
   * space used by something, and also throws an error if
   * the hack is bigger than the space allocated.
   * 
   * Example:
   * 
   * ORG 1200
   * #include "Foo.lyn.event" // This errors if bigger than 100 bytes.
   * RESERVE(1200, 1300)
   * ORG 1210; BYTE 1 // Trying to overwrite the area errors.
   */
  #define RESERVE(Start, End) "PROTECT Start End; ASSERT (End - CURRENTOFFSET)"

  /* PROTECT_FROM(Start)
   * 
   * This helper is a shorthand to PROTECT an area from
   * the given Start address up to the current assembly offset.
   * 
   * Example:
   * 
   * PUSH; ORG 0x1000
   * SomeLabel: {
   *   #incbin "Somefile.bin"
   * } ; PROTECT_FROM(SomeLabel); POP
   */
  #define PROTECT_FROM(Start) "PROTECT Start CURRENTOFFSET"

#endif // __HELPERS
