
#ifndef __CHAPTERTITLESASTEXT
  #define __CHAPTERTITLESASTEXT

  #include "../Helpers.event"
  #include "Extensions/Hack Installation.txt"
  #include "EAstdlib.event"

  /*
   * In FE7, chapter titles are drawn using a font and a text
   * table entry, while FE8 opts to have them as baked-in images.
   * This hack mimics FE7's behavior.
   *
   * The original hack is by circleseverywhere.
   * https://feuniverse.us/t/fe8-chapter-titles-as-text/2065
   *
   * The original hack was extended by hypergammaspaces to have
   * Latin1 character support.
   * https://feuniverse.us/t/hypergammaspaces-assorted-asm/4085/24
   */

  // These pieces of text are used for chapter titles that are
  // special, such as the '-- NO DATA --' text, or for chapter titles
  // that do not have text IDs.

  ALIGN 4; SpecialChapterTitleText:

    // Place your special chapter title text here.
    // I've chosen to simply #incbin UTF-8 encoded text files
    // for these.

    // This is used for empty save slots and when the chapter title
    // system gets an unknown title ID, and shouldn't be
    // removed.

      ALIGN 4; gNoDataChapterTitle:
      #incbin "TEXT/NoData.txt"
      BYTE 0

    // These are for end-of-game stuff
    // and are needed for `SRC/ChapterTitleIndexUtilities.c:GetChapterTitleID`

      ALIGN 4; gEpilogueChapterTitle:
      #incbin "TEXT/Epilogue.txt"
      BYTE 0

      ALIGN 4; gCreatureCampaignChapterTitle:
      #incbin "TEXT/CreatureCampaign.txt"
      BYTE 0

    // These are vanilla chapters and skirmish locations.
    // The skirmish locations are needed for `SRC/ChapterTitleIndexUtilities.c:GetSkirmishChapterTitleID`

      #include "VanillaChapters.event"
      #include "VanillaDungeons.event"
      #include "VanillaSkirmishes.event"

  #ifdef __DEBUG
    MESSAGE Chapter Title Special Text SpecialChapterTitleText to CURRENTOFFSET
  #endif // __DEBUG

  // This is a pointer table for the special chapter title
  // text, which allows us to refer to the entries using IDs
  // rather than full pointers.

  // By default, this includes all of the vanilla chapter titles.

  ALIGN 4; gSpecialChapterTitles:
  #include "SpecialChapterTitles.tsv.event"
  #ifdef __DEBUG
    MESSAGE Chapter Title Special Title Pointers gSpecialChapterTitles to CURRENTOFFSET
  #endif // __DEBUG

  // This is the actual table that maps text IDs (or special
  // chapter title IDs) to the chapter title IDs used in the
  // chapter data table. When referring to a special chapter
  // title, use the `SpecialChapterTitle` macro.

  // This includes the vanilla chapter titles by default
  // and is ordered to match vanilla; you should keep the
  // `NoDataChapterTitle` entry and possibly the
  // `CreatureCampaignChapterTitle` and `EpilogueChapterTitle`
  // because they're used in code, if you're going to
  // be replacing chapter titles.

  #define ChapterTitleEntry(textID) "SHORT textID"
  #define SpecialChapterTitle(specialID) "(0 - 1 - specialID)"

  ALIGN 4; gChapterTitles:
  #include "ChapterTitles.tsv.event"
  gChapterTitlesEnd:
  #ifdef __DEBUG
    MESSAGE Chapter Title Definition Table gChapterTitles to gChapterTitlesEnd
  #endif // __DEBUG

  // These are bookkeeping values that link the tables and the code.

  ALIGN 4; ChapterTitleBookkeeping:

    ALIGN 4; gChapterTitleEntryCount:; SHORT (gChapterTitlesEnd - gChapterTitles) / 2 // sizeof(SHORT)

    ALIGN 4
    gDefaultChapterTitleID:; BYTE NoDataChapterTitle
    gNoDataChapterTitleID:; BYTE NoDataChapterTitle
    gCreatureCampaignChapterTitleID:; BYTE CreatureCampaignChapterTitle
    gEpilogueChapterTitleID:; BYTE EpilogueChapterTitle

    gSkirmishStartingChapterTitleID:; BYTE ZahaWoodsChapterTitle

  #ifdef __DEBUG
    MESSAGE Chapter Title Bookkeeping values ChapterTitleBookkeeping to CURRENTOFFSET
  #endif // __DEBUG

  // This is the actual code.
  ALIGN 4; ChapterTitleCode:

    #include "SRC/DrawChapterTitle.lyn.event"
    #include "SRC/UTF8.lyn.event"
    #include "SRC/ChapterTitleIndexUtilities.lyn.event"
    #include "SRC/FontUtilities.lyn.event"

    // Protecting the hooks
    PROTECT 0x000895B4 0x00089623
    PROTECT 0x00089624 0x0008966B
    PROTECT 0x00089768 0x0008979B
    PROTECT 0x0008979C 0x00089803

  #ifdef __DEBUG
    MESSAGE Chapter Title Code ChapterTitleCode to CURRENTOFFSET
  #endif // __DEBUG

  // This installer is generated by the `generate_chapter_title_font.py`
  // script, and contains all of the chapter title font's information.
  // This generated file and any other generated files created by the
  // script should not be edited.

  #define NoKerning 0
  #define ChapterTitleFontEntry(codepoint, width, wideCell, upperMargin, lowerMargin, page, tile, kerning) "WORD (codepoint | ((width & 0x1F) << 24) | ((wideCell & 1) << 29)); BYTE upperMargin lowerMargin page tile; POIN kerning;"
  #define ChapterTitleWhitespaceEntry(codepoint, width) "WORD (codepoint | ((width) << 24))"
  #define ChapterTitleLookupEntry(codepoint, index) "WORD codepoint index"
  #define ChapterTitleKerningEntry(codepoint, adjustment) "WORD codepoint | ((adjustment & 0x1F) << 24)"

  #include "GLYPHS/CTF_Generated_Installer.event"

#endif // __CHAPTERTITLESASTEXT
